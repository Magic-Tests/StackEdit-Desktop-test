# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}


    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3


      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          build_script_name: 'build:github'
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
      - name: Windows-Installer
        uses: actions/upload-artifact@v2
        if: startsWith(windows-latest)
        with:
          name: Binaries
          path: dist/*.exe
          if-no-files-found: error
      - name: Linuxx64-deb
        uses: actions/upload-artifact@v2
        if: startsWith(ubuntu-latest)
        with:
          name: Binaries
          path: dist/*.deb
          if-no-files-found: error
      - name: Linux-x64-AppImage
        uses: actions/upload-artifact@v2
        if: startsWith(windows-latest)
        with:
          name: Binaries
          path: dist/*.AppImage
          if-no-files-found: error
      - name: MacOS-Image
        uses: actions/upload-artifact@v2
        if: startsWith(windows-latest)
        with:
          name: Binaries
          path: dist/*.dmg
          if-no-files-found: error
